// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExtensionPublished extends ethereum.Event {
  get params(): ExtensionPublished__Params {
    return new ExtensionPublished__Params(this);
  }
}

export class ExtensionPublished__Params {
  _event: ExtensionPublished;

  constructor(event: ExtensionPublished) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get extensionAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get subjectTemplates(): Array<Array<string>> {
    return this._event.parameters[2].value.toStringMatrix();
  }

  get maxExecutionGas(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ExtensionHandler extends ethereum.SmartContract {
  static bind(address: Address): ExtensionHandler {
    return new ExtensionHandler("ExtensionHandler", address);
  }

  addressOfExtensionName(param0: string): Address {
    let result = super.call(
      "addressOfExtensionName",
      "addressOfExtensionName(string):(address)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toAddress();
  }

  try_addressOfExtensionName(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "addressOfExtensionName",
      "addressOfExtensionName(string):(address)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultExtensionOfCommand(param0: string): Address {
    let result = super.call(
      "defaultExtensionOfCommand",
      "defaultExtensionOfCommand(string):(address)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toAddress();
  }

  try_defaultExtensionOfCommand(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "defaultExtensionOfCommand",
      "defaultExtensionOfCommand(string):(address)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getExtensionForCommand(walletAddr: Address, command: string): Address {
    let result = super.call(
      "getExtensionForCommand",
      "getExtensionForCommand(address,string):(address)",
      [
        ethereum.Value.fromAddress(walletAddr),
        ethereum.Value.fromString(command)
      ]
    );

    return result[0].toAddress();
  }

  try_getExtensionForCommand(
    walletAddr: Address,
    command: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getExtensionForCommand",
      "getExtensionForCommand(address,string):(address)",
      [
        ethereum.Value.fromAddress(walletAddr),
        ethereum.Value.fromString(command)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSubjectTemplatesOfExtension(extensionAddr: Address): Array<Array<string>> {
    let result = super.call(
      "getSubjectTemplatesOfExtension",
      "getSubjectTemplatesOfExtension(address):(string[][])",
      [ethereum.Value.fromAddress(extensionAddr)]
    );

    return result[0].toStringMatrix();
  }

  try_getSubjectTemplatesOfExtension(
    extensionAddr: Address
  ): ethereum.CallResult<Array<Array<string>>> {
    let result = super.tryCall(
      "getSubjectTemplatesOfExtension",
      "getSubjectTemplatesOfExtension(address):(string[][])",
      [ethereum.Value.fromAddress(extensionAddr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringMatrix());
  }

  maxGasOfExtension(param0: Address): BigInt {
    let result = super.call(
      "maxGasOfExtension",
      "maxGasOfExtension(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_maxGasOfExtension(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxGasOfExtension",
      "maxGasOfExtension(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  subjectTemplatesOfExtension(
    param0: Address,
    param1: BigInt,
    param2: BigInt
  ): string {
    let result = super.call(
      "subjectTemplatesOfExtension",
      "subjectTemplatesOfExtension(address,uint256,uint256):(string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toString();
  }

  try_subjectTemplatesOfExtension(
    param0: Address,
    param1: BigInt,
    param2: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "subjectTemplatesOfExtension",
      "subjectTemplatesOfExtension(address,uint256,uint256):(string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  userExtensionOfCommand(param0: Address, param1: string): Address {
    let result = super.call(
      "userExtensionOfCommand",
      "userExtensionOfCommand(address,string):(address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromString(param1)]
    );

    return result[0].toAddress();
  }

  try_userExtensionOfCommand(
    param0: Address,
    param1: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "userExtensionOfCommand",
      "userExtensionOfCommand(address,string):(address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromString(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class PublishExtensionCall extends ethereum.Call {
  get inputs(): PublishExtensionCall__Inputs {
    return new PublishExtensionCall__Inputs(this);
  }

  get outputs(): PublishExtensionCall__Outputs {
    return new PublishExtensionCall__Outputs(this);
  }
}

export class PublishExtensionCall__Inputs {
  _call: PublishExtensionCall;

  constructor(call: PublishExtensionCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get addr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get subjectTemplates(): Array<Array<string>> {
    return this._call.inputValues[2].value.toStringMatrix();
  }

  get maxExecutionGas(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class PublishExtensionCall__Outputs {
  _call: PublishExtensionCall;

  constructor(call: PublishExtensionCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDefaultExtensionsCall extends ethereum.Call {
  get inputs(): SetDefaultExtensionsCall__Inputs {
    return new SetDefaultExtensionsCall__Inputs(this);
  }

  get outputs(): SetDefaultExtensionsCall__Outputs {
    return new SetDefaultExtensionsCall__Outputs(this);
  }
}

export class SetDefaultExtensionsCall__Inputs {
  _call: SetDefaultExtensionsCall;

  constructor(call: SetDefaultExtensionsCall) {
    this._call = call;
  }

  get defaultExtensions(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class SetDefaultExtensionsCall__Outputs {
  _call: SetDefaultExtensionsCall;

  constructor(call: SetDefaultExtensionsCall) {
    this._call = call;
  }
}

export class SetExtensionForCommandCall extends ethereum.Call {
  get inputs(): SetExtensionForCommandCall__Inputs {
    return new SetExtensionForCommandCall__Inputs(this);
  }

  get outputs(): SetExtensionForCommandCall__Outputs {
    return new SetExtensionForCommandCall__Outputs(this);
  }
}

export class SetExtensionForCommandCall__Inputs {
  _call: SetExtensionForCommandCall;

  constructor(call: SetExtensionForCommandCall) {
    this._call = call;
  }

  get walletAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get command(): string {
    return this._call.inputValues[1].value.toString();
  }

  get extensionAddr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetExtensionForCommandCall__Outputs {
  _call: SetExtensionForCommandCall;

  constructor(call: SetExtensionForCommandCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
