{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "coreAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "addressOfNFTName",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "emailAddrCommit",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "extensionAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "state",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiryTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct UnclaimedState",
          "name": "unclaimedState",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "claimUnclaimedState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "core",
      "outputs": [
        {
          "internalType": "contract EmailWalletCore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "templateIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes[]",
          "name": "subjectParams",
          "type": "bytes[]"
        },
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "hasEmailRecipient",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipientETHAddr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "emailNullifier",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "emailAddrCommit",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "extensionAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "state",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiryTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct UnclaimedState",
          "name": "unclaimedState",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isInternal",
          "type": "bool"
        }
      ],
      "name": "registerUnclaimedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "templates",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "emailAddrCommit",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "extensionAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "state",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "expiryTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct UnclaimedState",
          "name": "unclaimedState",
          "type": "tuple"
        }
      ],
      "name": "voidUnclaimedState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6001608081815260c06040529060a05b60608152602001906001900390816200000f57505080516200003a916003916020909101906200015c565b503480156200004857600080fd5b506040516200129a3803806200129a8339810160408190526200006b916200034c565b600080546001600160a01b038085166001600160a01b031992831617835560018054918516919092161790556040805160c081018252600460808201908152630537761760e41b60a0830152815281518083018352600d81526c7b746f6b656e416d6f756e747d60981b60208281019190915280830191909152825180840184526002815261746f60f01b8183015282840152825180840190935260088352677b737472696e677d60c01b908301526060810191909152600380549192909162000139576200013962000384565b9060005260206000200190600462000153929190620001c0565b505050620004f5565b828054828255906000526020600020908101928215620001ae579160200282015b82811115620001ae57825180516200019d91849160209091019062000219565b50916020019190600101906200017d565b50620001bc92915062000264565b5090565b8280548282559060005260206000209081019282156200020b579160200282015b828111156200020b5782518290620001fa908262000429565b5091602001919060010190620001e1565b50620001bc92915062000285565b8280548282559060005260206000209081019282156200020b579160200282015b828111156200020b578251829062000253908262000429565b50916020019190600101906200023a565b80821115620001bc5760006200027b8282620002a6565b5060010162000264565b80821115620001bc5760006200029c8282620002c9565b5060010162000285565b5080546000825590600052602060002090810190620002c6919062000285565b50565b508054620002d7906200039a565b6000825580601f10620002e8575050565b601f016020900490600052602060002090810190620002c691905b80821115620001bc576000815560010162000303565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200034757600080fd5b919050565b600080604083850312156200036057600080fd5b6200036b836200032f565b91506200037b602084016200032f565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620003af57607f821691505b602082108103620003d057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200042457600081815260208120601f850160051c81016020861015620003ff5750805b601f850160051c820191505b8181101562000420578281556001016200040b565b5050505b505050565b81516001600160401b0381111562000445576200044562000319565b6200045d816200045684546200039a565b84620003d6565b602080601f8311600181146200049557600084156200047c5750858301515b600019600386901b1c1916600185901b17855562000420565b600085815260208120601f198616915b82811015620004c657888601518255948401946001909101908401620004a5565b5085821015620004e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d9580620005056000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063e93977e811610066578063e93977e814610112578063eba8f5b414610125578063f2f4eb2614610133578063f887ea401461015e578063fd72aa301461017157600080fd5b8063089fe6aa14610098578063534e4af7146100ba578063d07e0189146100dd578063e05df3ee146100fd575b600080fd5b6100a1610bb881565b60405162ffffff90911681526020015b60405180910390f35b6100cd6100c836600461094c565b6101a5565b60405190151581526020016100b1565b6100f06100eb36600461099a565b6101e7565b6040516100b191906109e0565b61011061010b366004610a13565b6102ac565b005b610110610120366004610a65565b6102e6565b61011061010b366004610b7b565b600054610146906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b600154610146906001600160a01b031681565b61014661017f366004610bb8565b80516020818301810180516002825292820191909301209152546001600160a01b031681565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b60448201526000906064015b60405180910390fd5b600382815481106101f757600080fd5b90600052602060002001818154811061020f57600080fd5b9060005260206000200160009150915050805461022b90610c01565b80601f016020809104026020016040519081016040528092919081815260200182805461025790610c01565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b505050505081565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b60448201526064016101de565b600080866000815181106102fc576102fc610c3b565b60200260200101518060200190518101906103179190610c51565b6000805460405163076c2e9160e51b8152939550919350916001600160a01b039091169063ed85d2209061034f9085906004016109e0565b602060405180830381865afa15801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610d02565b6000549091506001600160a01b031633146103de5760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b60448201526064016101de565b60ff8916156104275760405162461bcd60e51b81526020600482015260156024820152740d2dcecc2d8d2c840e8cadae0d8c2e8ca92dcc8caf605b1b60448201526064016101de565b6001600160a01b0381166104765760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964206f757420746f6b656e206e616d6560501b60448201526064016101de565b85156104c45760405162461bcd60e51b815260206004820152601a60248201527f726563697069656e74206973206e6f7420737570706f7274656400000000000060448201526064016101de565b82516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190610d1f565b60005485516020870151604051631968d16b60e21b81526001600160a01b039283166004820152602481019190915292935016906365a345ac90604401600060405180830381600087803b15801561058757600080fd5b505af115801561059b573d6000803e3d6000fd5b50505050602084015184516040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190610d1f565b6106199190610d38565b146106665760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e206973206e6f742073656e742066726f6d20636f7265000000000060448201526064016101de565b604080516101008101825285516001600160a01b0390811682528481166020808401918252610bb88486019081528d8416606086019081524260808701908152928b015160a08701908152600060c0880181815260e08901918252600154995163414bf38960e01b8152895189166004820152965188166024880152935162ffffff16604487015291518616606486015292516084850152915160a48401525160c483015251821660e48201529192169063414bf38990610104016020604051808303816000875af1158015610740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107649190610d1f565b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107ab576107ab610772565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156107da576107da610772565b604052919050565b6001600160a01b03811681146107f757600080fd5b50565b8035610805816107e2565b919050565b600067ffffffffffffffff82111561082457610824610772565b50601f01601f191660200190565b60006108456108408461080a565b6107b1565b905082815283838301111561085957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261088157600080fd5b61089083833560208501610832565b9392505050565b600060a082840312156108a957600080fd5b60405160a0810167ffffffffffffffff82821081831117156108cd576108cd610772565b8160405282935084358352602085013591506108e8826107e2565b816020840152604085013591506108fe826107e2565b816040840152606085013591508082111561091857600080fd5b5061092585828601610870565b606083015250608083013560808201525092915050565b8035801515811461080557600080fd5b6000806040838503121561095f57600080fd5b823567ffffffffffffffff81111561097657600080fd5b61098285828601610897565b9250506109916020840161093c565b90509250929050565b600080604083850312156109ad57600080fd5b50508035926020909101359150565b60005b838110156109d75781810151838201526020016109bf565b50506000910152565b60208152600082518060208401526109ff8160408501602087016109bc565b601f01601f19169190910160400192915050565b60008060408385031215610a2657600080fd5b823567ffffffffffffffff811115610a3d57600080fd5b610a4985828601610897565b9250506020830135610a5a816107e2565b809150509250929050565b60008060008060008060c08789031215610a7e57600080fd5b863560ff81168114610a8f57600080fd5b955060208781013567ffffffffffffffff80821115610aad57600080fd5b818a0191508a601f830112610ac157600080fd5b813581811115610ad357610ad3610772565b8060051b610ae28582016107b1565b918252838101850191858101908e841115610afc57600080fd5b86860192505b83831015610b36578483351115610b1857600080fd5b610b278f888535890101610870565b82529186019190860190610b02565b809b5050505050505050610b4c604088016107fa565b9350610b5a6060880161093c565b9250610b68608088016107fa565b915060a087013590509295509295509295565b600060208284031215610b8d57600080fd5b813567ffffffffffffffff811115610ba457600080fd5b610bb084828501610897565b949350505050565b600060208284031215610bca57600080fd5b813567ffffffffffffffff811115610be157600080fd5b8201601f81018413610bf257600080fd5b610bb084823560208401610832565b600181811c90821680610c1557607f821691505b602082108103610c3557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000808284036060811215610c6557600080fd5b6040811215610c7357600080fd5b50610c7c610788565b8351610c87816107e2565b815260208481015190820152604084015190925067ffffffffffffffff811115610cb057600080fd5b8301601f81018513610cc157600080fd5b8051610ccf6108408261080a565b818152866020838501011115610ce457600080fd5b610cf58260208301602086016109bc565b8093505050509250929050565b600060208284031215610d1457600080fd5b8151610890816107e2565b600060208284031215610d3157600080fd5b5051919050565b81810381811115610d5957634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209b0762726f77f612c9b6ed46f5b4458d7e9f138155154a6cba10f2d0d00eab1d64736f6c63430008110033",
    "sourceMap": "1871:1:139:-:0;1557:2118;1856:17;;;;1557:2118;1856:17;1557:2118;1856:17;;;;;;;;;;;;;;;-1:-1:-1;;1826:47:139;;;;;;;;;;;;:::i;:::-;;1880:245;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1937:4;:41;;-1:-1:-1;;;;;1937:41:139;;;-1:-1:-1;;;;;;1937:41:139;;;;;;;1988:29;;;;;;;;;;;;2060:58;;;;;;;;;;;;;;;-1:-1:-1;;;2060:58:139;;;;;;;;;;;;;;;;-1:-1:-1;;;2060:58:139;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2060:58:139;;;;-1:-1:-1;;;2060:58:139;;;;;;;;;;;;-1:-1:-1;;;2060:58:139;;;;-1:-1:-1;;;2060:58:139;;;;:9;:12;;:58;;:9;;:12;;;;:::i;:::-;;;;;;;;:58;;;;;;;:::i;:::-;;1880:245;;1557:2118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1557:2118:139;;;-1:-1:-1;1557:2118:139;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1557:2118:139;;;-1:-1:-1;1557:2118:139;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:127:141;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:141;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:293::-;407:6;415;468:2;456:9;447:7;443:23;439:32;436:52;;;484:1;481;474:12;436:52;507:40;537:9;507:40;:::i;:::-;497:50;;566:49;611:2;600:9;596:18;566:49;:::i;:::-;556:59;;328:293;;;;;:::o;626:127::-;687:10;682:3;678:20;675:1;668:31;718:4;715:1;708:15;742:4;739:1;732:15;758:380;837:1;833:12;;;;880;;;901:61;;955:4;947:6;943:17;933:27;;901:61;1008:2;1000:6;997:14;977:18;974:38;971:161;;1054:10;1049:3;1045:20;1042:1;1035:31;1089:4;1086:1;1079:15;1117:4;1114:1;1107:15;971:161;;758:380;;;:::o;1269:545::-;1371:2;1366:3;1363:11;1360:448;;;1407:1;1432:5;1428:2;1421:17;1477:4;1473:2;1463:19;1547:2;1535:10;1531:19;1528:1;1524:27;1518:4;1514:38;1583:4;1571:10;1568:20;1565:47;;;-1:-1:-1;1606:4:141;1565:47;1661:2;1656:3;1652:12;1649:1;1645:20;1639:4;1635:31;1625:41;;1716:82;1734:2;1727:5;1724:13;1716:82;;;1779:17;;;1760:1;1749:13;1716:82;;;1720:3;;;1360:448;1269:545;;;:::o;1990:1352::-;2110:10;;-1:-1:-1;;;;;2132:30:141;;2129:56;;;2165:18;;:::i;:::-;2194:97;2284:6;2244:38;2276:4;2270:11;2244:38;:::i;:::-;2238:4;2194:97;:::i;:::-;2346:4;;2410:2;2399:14;;2427:1;2422:663;;;;3129:1;3146:6;3143:89;;;-1:-1:-1;3198:19:141;;;3192:26;3143:89;-1:-1:-1;;1947:1:141;1943:11;;;1939:24;1935:29;1925:40;1971:1;1967:11;;;1922:57;3245:81;;2392:944;;2422:663;1216:1;1209:14;;;1253:4;1240:18;;-1:-1:-1;;2458:20:141;;;2576:236;2590:7;2587:1;2584:14;2576:236;;;2679:19;;;2673:26;2658:42;;2771:27;;;;2739:1;2727:14;;;;2606:19;;2576:236;;;2580:3;2840:6;2831:7;2828:19;2825:201;;;2901:19;;;2895:26;-1:-1:-1;;2984:1:141;2980:14;;;2996:3;2976:24;2972:37;2968:42;2953:58;2938:74;;2825:201;-1:-1:-1;;;;;3072:1:141;3056:14;;;3052:22;3039:36;;-1:-1:-1;1990:1352:141:o;:::-;1557:2118:139;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063e93977e811610066578063e93977e814610112578063eba8f5b414610125578063f2f4eb2614610133578063f887ea401461015e578063fd72aa301461017157600080fd5b8063089fe6aa14610098578063534e4af7146100ba578063d07e0189146100dd578063e05df3ee146100fd575b600080fd5b6100a1610bb881565b60405162ffffff90911681526020015b60405180910390f35b6100cd6100c836600461094c565b6101a5565b60405190151581526020016100b1565b6100f06100eb36600461099a565b6101e7565b6040516100b191906109e0565b61011061010b366004610a13565b6102ac565b005b610110610120366004610a65565b6102e6565b61011061010b366004610b7b565b600054610146906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b600154610146906001600160a01b031681565b61014661017f366004610bb8565b80516020818301810180516002825292820191909301209152546001600160a01b031681565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b60448201526000906064015b60405180910390fd5b600382815481106101f757600080fd5b90600052602060002001818154811061020f57600080fd5b9060005260206000200160009150915050805461022b90610c01565b80601f016020809104026020016040519081016040528092919081815260200182805461025790610c01565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b505050505081565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b60448201526064016101de565b600080866000815181106102fc576102fc610c3b565b60200260200101518060200190518101906103179190610c51565b6000805460405163076c2e9160e51b8152939550919350916001600160a01b039091169063ed85d2209061034f9085906004016109e0565b602060405180830381865afa15801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610d02565b6000549091506001600160a01b031633146103de5760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b60448201526064016101de565b60ff8916156104275760405162461bcd60e51b81526020600482015260156024820152740d2dcecc2d8d2c840e8cadae0d8c2e8ca92dcc8caf605b1b60448201526064016101de565b6001600160a01b0381166104765760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964206f757420746f6b656e206e616d6560501b60448201526064016101de565b85156104c45760405162461bcd60e51b815260206004820152601a60248201527f726563697069656e74206973206e6f7420737570706f7274656400000000000060448201526064016101de565b82516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190610d1f565b60005485516020870151604051631968d16b60e21b81526001600160a01b039283166004820152602481019190915292935016906365a345ac90604401600060405180830381600087803b15801561058757600080fd5b505af115801561059b573d6000803e3d6000fd5b50505050602084015184516040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190610d1f565b6106199190610d38565b146106665760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e206973206e6f742073656e742066726f6d20636f7265000000000060448201526064016101de565b604080516101008101825285516001600160a01b0390811682528481166020808401918252610bb88486019081528d8416606086019081524260808701908152928b015160a08701908152600060c0880181815260e08901918252600154995163414bf38960e01b8152895189166004820152965188166024880152935162ffffff16604487015291518616606486015292516084850152915160a48401525160c483015251821660e48201529192169063414bf38990610104016020604051808303816000875af1158015610740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107649190610d1f565b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107ab576107ab610772565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156107da576107da610772565b604052919050565b6001600160a01b03811681146107f757600080fd5b50565b8035610805816107e2565b919050565b600067ffffffffffffffff82111561082457610824610772565b50601f01601f191660200190565b60006108456108408461080a565b6107b1565b905082815283838301111561085957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261088157600080fd5b61089083833560208501610832565b9392505050565b600060a082840312156108a957600080fd5b60405160a0810167ffffffffffffffff82821081831117156108cd576108cd610772565b8160405282935084358352602085013591506108e8826107e2565b816020840152604085013591506108fe826107e2565b816040840152606085013591508082111561091857600080fd5b5061092585828601610870565b606083015250608083013560808201525092915050565b8035801515811461080557600080fd5b6000806040838503121561095f57600080fd5b823567ffffffffffffffff81111561097657600080fd5b61098285828601610897565b9250506109916020840161093c565b90509250929050565b600080604083850312156109ad57600080fd5b50508035926020909101359150565b60005b838110156109d75781810151838201526020016109bf565b50506000910152565b60208152600082518060208401526109ff8160408501602087016109bc565b601f01601f19169190910160400192915050565b60008060408385031215610a2657600080fd5b823567ffffffffffffffff811115610a3d57600080fd5b610a4985828601610897565b9250506020830135610a5a816107e2565b809150509250929050565b60008060008060008060c08789031215610a7e57600080fd5b863560ff81168114610a8f57600080fd5b955060208781013567ffffffffffffffff80821115610aad57600080fd5b818a0191508a601f830112610ac157600080fd5b813581811115610ad357610ad3610772565b8060051b610ae28582016107b1565b918252838101850191858101908e841115610afc57600080fd5b86860192505b83831015610b36578483351115610b1857600080fd5b610b278f888535890101610870565b82529186019190860190610b02565b809b5050505050505050610b4c604088016107fa565b9350610b5a6060880161093c565b9250610b68608088016107fa565b915060a087013590509295509295509295565b600060208284031215610b8d57600080fd5b813567ffffffffffffffff811115610ba457600080fd5b610bb084828501610897565b949350505050565b600060208284031215610bca57600080fd5b813567ffffffffffffffff811115610be157600080fd5b8201601f81018413610bf257600080fd5b610bb084823560208401610832565b600181811c90821680610c1557607f821691505b602082108103610c3557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000808284036060811215610c6557600080fd5b6040811215610c7357600080fd5b50610c7c610788565b8351610c87816107e2565b815260208481015190820152604084015190925067ffffffffffffffff811115610cb057600080fd5b8301601f81018513610cc157600080fd5b8051610ccf6108408261080a565b818152866020838501011115610ce457600080fd5b610cf58260208301602086016109bc565b8093505050509250929050565b600060208284031215610d1457600080fd5b8151610890816107e2565b600060208284031215610d3157600080fd5b5051919050565b81810381811115610d5957634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209b0762726f77f612c9b6ed46f5b4458d7e9f138155154a6cba10f2d0d00eab1d64736f6c63430008110033",
    "sourceMap": "1557:2118:139:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1725:37;;1758:4;1725:37;;;;;188:8:141;176:21;;;158:40;;146:2;131:18;1725:37:139;;;;;;;;1461:225:109;;;;;;:::i;:::-;;:::i;:::-;;;3640:14:141;;3633:22;3615:41;;3603:2;3588:18;1461:225:109;3475:187:141;1826:47:139;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1857:182:109:-;;;;;;:::i;:::-;;:::i;:::-;;2131:1542:139;;;;;;:::i;:::-;;:::i;2149:149:109:-;;;;;;:::i;1602:27:139:-;;;;;-1:-1:-1;;;;;1602:27:139;;;;;;-1:-1:-1;;;;;7145:32:141;;;7127:51;;7115:2;7100:18;1602:27:139;6948:236:141;1635:25:139;;;;;-1:-1:-1;;;;;1635:25:139;;;1769:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1769:50:139;;;1461:225:109;1654:25;;-1:-1:-1;;;1654:25:109;;8283:2:141;1654:25:109;;;8265:21:141;8322:2;8302:18;;;8295:30;-1:-1:-1;;;8341:18:141;;;8334:45;1594:4:109;;8396:18:141;;1654:25:109;;;;;;;;1826:47:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1857:182:109:-;2007:25;;-1:-1:-1;;;2007:25:109;;8283:2:141;2007:25:109;;;8265:21:141;8322:2;8302:18;;;8295:30;-1:-1:-1;;;8341:18:141;;;8334:45;8396:18;;2007:25:109;8081:339:141;2131:1542:139;2397:36;2435:22;2472:13;2486:1;2472:16;;;;;;;;:::i;:::-;;;;;;;2461:54;;;;;;;;;;;;:::i;:::-;2525:20;2548:4;;:35;;-1:-1:-1;;;2548:35:139;;2396:119;;-1:-1:-1;2396:119:139;;-1:-1:-1;2525:20:139;-1:-1:-1;;;;;2548:4:139;;;;:25;;:35;;2396:119;;2548:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2623:4;;2525:58;;-1:-1:-1;;;;;;2623:4:139;2601:10;:27;2593:54;;;;-1:-1:-1;;;2593:54:139;;10416:2:141;2593:54:139;;;10398:21:141;10455:2;10435:18;;;10428:30;-1:-1:-1;;;10474:18:141;;;10467:44;10528:18;;2593:54:139;10214:338:141;2593:54:139;2665:18;;;;2657:52;;;;-1:-1:-1;;;2657:52:139;;10759:2:141;2657:52:139;;;10741:21:141;10798:2;10778:18;;;10771:30;-1:-1:-1;;;10817:18:141;;;10810:51;10878:18;;2657:52:139;10557:345:141;2657:52:139;-1:-1:-1;;;;;2727:26:139;;2719:61;;;;-1:-1:-1;;;2719:61:139;;11109:2:141;2719:61:139;;;11091:21:141;11148:2;11128:18;;;11121:30;-1:-1:-1;;;11167:18:141;;;11160:52;11229:18;;2719:61:139;10907:346:141;2719:61:139;2799:17;2798:18;2790:57;;;;-1:-1:-1;;;2790:57:139;;11460:2:141;2790:57:139;;;11442:21:141;11499:2;11479:18;;;11472:30;11538:28;11518:18;;;11511:56;11584:18;;2790:57:139;11258:350:141;2790:57:139;2881:24;;2874:57;;-1:-1:-1;;;2874:57:139;;2925:4;2874:57;;;7127:51:141;2857:14:139;;-1:-1:-1;;;;;2874:42:139;;;;7100:18:141;;2874:57:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2941:4;;2970:24;;2995:21;;;;2941:76;;-1:-1:-1;;;2941:76:139;;-1:-1:-1;;;;;11994:32:141;;;2941:76:139;;;11976:51:141;12043:18;;;12036:34;;;;2857:74:139;;-1:-1:-1;2941:4:139;;:28;;11949:18:141;;2941:76:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3108:21:139;;;;3042:24;;3035:57;;-1:-1:-1;;;3035:57:139;;3086:4;3035:57;;;7127:51:141;3095:9:139;;-1:-1:-1;;;;;3035:42:139;;;;7100:18:141;;3035:57:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;;;:::i;:::-;:94;3027:134;;;;-1:-1:-1;;;3027:134:139;;12513:2:141;3027:134:139;;;12495:21:141;12552:2;12532:18;;;12525:30;12591:29;12571:18;;;12564:57;12638:18;;3027:134:139;12311:351:141;3027:134:139;3235:386;;;;;;;;3310:24;;-1:-1:-1;;;;;3235:386:139;;;;;;;;;;;;;;;1758:4;3235:386;;;;;;;;;;;;;;;3467:15;3235:386;;;;;;3510:21;;;;3235:386;;;;;;-1:-1:-1;3235:386:139;;;;;;;;;;;;3631:6;;:35;;-1:-1:-1;;;3631:35:139;;12956:13:141;;12952:22;;3631:35:139;;;12934:41:141;13017:24;;13013:33;;12991:20;;;12984:63;13089:24;;13115:8;13085:39;13063:20;;;13056:69;13167:24;;13163:33;;13141:20;;;13134:63;13235:24;;13213:20;;;13206:54;13298:24;;13276:20;;;13269:54;13361:24;13339:20;;;13332:54;13428:24;13424:33;;13402:20;;;13395:63;3235:386:139;;3631:6;;:23;;12868:19:141;;3631:35:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2361:1312;;;;;2131:1542;;;;;;:::o;209:127:141:-;270:10;265:3;261:20;258:1;251:31;301:4;298:1;291:15;325:4;322:1;315:15;341:257;413:4;407:11;;;445:17;;492:18;477:34;;513:22;;;474:62;471:88;;;539:18;;:::i;:::-;575:4;568:24;341:257;:::o;603:275::-;674:2;668:9;739:2;720:13;;-1:-1:-1;;716:27:141;704:40;;774:18;759:34;;795:22;;;756:62;753:88;;;821:18;;:::i;:::-;857:2;850:22;603:275;;-1:-1:-1;603:275:141:o;883:131::-;-1:-1:-1;;;;;958:31:141;;948:42;;938:70;;1004:1;1001;994:12;938:70;883:131;:::o;1019:134::-;1087:20;;1116:31;1087:20;1116:31;:::i;:::-;1019:134;;;:::o;1158:186::-;1206:4;1239:18;1231:6;1228:30;1225:56;;;1261:18;;:::i;:::-;-1:-1:-1;1327:2:141;1306:15;-1:-1:-1;;1302:29:141;1333:4;1298:40;;1158:186::o;1349:336::-;1413:5;1442:52;1458:35;1486:6;1458:35;:::i;:::-;1442:52;:::i;:::-;1433:61;;1517:6;1510:5;1503:21;1557:3;1548:6;1543:3;1539:16;1536:25;1533:45;;;1574:1;1571;1564:12;1533:45;1623:6;1618:3;1611:4;1604:5;1600:16;1587:43;1677:1;1670:4;1661:6;1654:5;1650:18;1646:29;1639:40;1349:336;;;;;:::o;1690:220::-;1732:5;1785:3;1778:4;1770:6;1766:17;1762:27;1752:55;;1803:1;1800;1793:12;1752:55;1825:79;1900:3;1891:6;1878:20;1871:4;1863:6;1859:17;1825:79;:::i;:::-;1816:88;1690:220;-1:-1:-1;;;1690:220:141:o;1915:957::-;1976:5;2024:4;2012:9;2007:3;2003:19;1999:30;1996:50;;;2042:1;2039;2032:12;1996:50;2075:2;2069:9;2117:4;2109:6;2105:17;2141:18;2209:6;2197:10;2194:22;2189:2;2177:10;2174:18;2171:46;2168:72;;;2220:18;;:::i;:::-;2260:10;2256:2;2249:22;2289:6;2280:15;;2332:9;2319:23;2311:6;2304:39;2395:2;2384:9;2380:18;2367:32;2352:47;;2408:33;2433:7;2408:33;:::i;:::-;2474:7;2469:2;2461:6;2457:15;2450:32;2534:2;2523:9;2519:18;2506:32;2491:47;;2547:33;2572:7;2547:33;:::i;:::-;2613:7;2608:2;2600:6;2596:15;2589:32;2672:2;2661:9;2657:18;2644:32;2630:46;;2699:2;2691:6;2688:14;2685:34;;;2715:1;2712;2705:12;2685:34;;2752:45;2793:3;2784:6;2773:9;2769:22;2752:45;:::i;:::-;2747:2;2739:6;2735:15;2728:70;;2860:3;2849:9;2845:19;2832:33;2826:3;2818:6;2814:16;2807:59;;1915:957;;;;:::o;2877:160::-;2942:20;;2998:13;;2991:21;2981:32;;2971:60;;3027:1;3024;3017:12;3042:428;3140:6;3148;3201:2;3189:9;3180:7;3176:23;3172:32;3169:52;;;3217:1;3214;3207:12;3169:52;3257:9;3244:23;3290:18;3282:6;3279:30;3276:50;;;3322:1;3319;3312:12;3276:50;3345:65;3402:7;3393:6;3382:9;3378:22;3345:65;:::i;:::-;3335:75;;;3429:35;3460:2;3449:9;3445:18;3429:35;:::i;:::-;3419:45;;3042:428;;;;;:::o;3667:248::-;3735:6;3743;3796:2;3784:9;3775:7;3771:23;3767:32;3764:52;;;3812:1;3809;3802:12;3764:52;-1:-1:-1;;3835:23:141;;;3905:2;3890:18;;;3877:32;;-1:-1:-1;3667:248:141:o;3920:250::-;4005:1;4015:113;4029:6;4026:1;4023:13;4015:113;;;4105:11;;;4099:18;4086:11;;;4079:39;4051:2;4044:10;4015:113;;;-1:-1:-1;;4162:1:141;4144:16;;4137:27;3920:250::o;4175:396::-;4324:2;4313:9;4306:21;4287:4;4356:6;4350:13;4399:6;4394:2;4383:9;4379:18;4372:34;4415:79;4487:6;4482:2;4471:9;4467:18;4462:2;4454:6;4450:15;4415:79;:::i;:::-;4555:2;4534:15;-1:-1:-1;;4530:29:141;4515:45;;;;4562:2;4511:54;;4175:396;-1:-1:-1;;4175:396:141:o;4576:495::-;4677:6;4685;4738:2;4726:9;4717:7;4713:23;4709:32;4706:52;;;4754:1;4751;4744:12;4706:52;4794:9;4781:23;4827:18;4819:6;4816:30;4813:50;;;4859:1;4856;4849:12;4813:50;4882:65;4939:7;4930:6;4919:9;4915:22;4882:65;:::i;:::-;4872:75;;;4997:2;4986:9;4982:18;4969:32;5010:31;5035:5;5010:31;:::i;:::-;5060:5;5050:15;;;4576:495;;;;;:::o;5076:1502::-;5209:6;5217;5225;5233;5241;5249;5302:3;5290:9;5281:7;5277:23;5273:33;5270:53;;;5319:1;5316;5309:12;5270:53;5358:9;5345:23;5408:4;5401:5;5397:16;5390:5;5387:27;5377:55;;5428:1;5425;5418:12;5377:55;5451:5;-1:-1:-1;5475:2:141;5513:18;;;5500:32;5551:18;5581:14;;;5578:34;;;5608:1;5605;5598:12;5578:34;5646:6;5635:9;5631:22;5621:32;;5691:7;5684:4;5680:2;5676:13;5672:27;5662:55;;5713:1;5710;5703:12;5662:55;5749:2;5736:16;5771:2;5767;5764:10;5761:36;;;5777:18;;:::i;:::-;5823:2;5820:1;5816:10;5846:28;5870:2;5866;5862:11;5846:28;:::i;:::-;5908:15;;;5978:11;;;5974:20;;;5939:12;;;;6006:19;;;6003:39;;;6038:1;6035;6028:12;6003:39;6070:2;6066;6062:11;6051:22;;6082:245;6098:6;6093:3;6090:15;6082:245;;;6177:2;6171:3;6158:17;6155:25;6152:45;;;6193:1;6190;6183:12;6152:45;6222:62;6276:7;6271:2;6264:3;6251:17;6247:2;6243:26;6239:35;6222:62;:::i;:::-;6210:75;;6115:12;;;;6305;;;;6082:245;;;6346:5;6336:15;;;;;;;;;6370:38;6404:2;6393:9;6389:18;6370:38;:::i;:::-;6360:48;;6427:35;6458:2;6447:9;6443:18;6427:35;:::i;:::-;6417:45;;6481:39;6515:3;6504:9;6500:19;6481:39;:::i;:::-;6471:49;;6567:3;6556:9;6552:19;6539:33;6529:43;;5076:1502;;;;;;;;:::o;6583:360::-;6675:6;6728:2;6716:9;6707:7;6703:23;6699:32;6696:52;;;6744:1;6741;6734:12;6696:52;6784:9;6771:23;6817:18;6809:6;6806:30;6803:50;;;6849:1;6846;6839:12;6803:50;6872:65;6929:7;6920:6;6909:9;6905:22;6872:65;:::i;:::-;6862:75;6583:360;-1:-1:-1;;;;6583:360:141:o;7418:450::-;7487:6;7540:2;7528:9;7519:7;7515:23;7511:32;7508:52;;;7556:1;7553;7546:12;7508:52;7596:9;7583:23;7629:18;7621:6;7618:30;7615:50;;;7661:1;7658;7651:12;7615:50;7684:22;;7737:4;7729:13;;7725:27;-1:-1:-1;7715:55:141;;7766:1;7763;7756:12;7715:55;7789:73;7854:7;7849:2;7836:16;7831:2;7827;7823:11;7789:73;:::i;8425:380::-;8504:1;8500:12;;;;8547;;;8568:61;;8622:4;8614:6;8610:17;8600:27;;8568:61;8675:2;8667:6;8664:14;8644:18;8641:38;8638:161;;8721:10;8716:3;8712:20;8709:1;8702:31;8756:4;8753:1;8746:15;8784:4;8781:1;8774:15;8638:161;;8425:380;;;:::o;8810:127::-;8871:10;8866:3;8862:20;8859:1;8852:31;8902:4;8899:1;8892:15;8926:4;8923:1;8916:15;8942:1011;9064:6;9072;9116:9;9107:7;9103:23;9146:2;9142;9138:11;9135:31;;;9162:1;9159;9152:12;9135:31;9186:4;9182:2;9178:13;9175:33;;;9204:1;9201;9194:12;9175:33;;9230:22;;:::i;:::-;9282:9;9276:16;9301:33;9326:7;9301:33;:::i;:::-;9343:22;;9418:2;9403:18;;;9397:25;9381:14;;;9374:49;9491:4;9476:20;;9470:27;9350:5;;-1:-1:-1;9520:18:141;9509:30;;9506:50;;;9552:1;9549;9542:12;9506:50;9575:22;;9628:4;9620:13;;9616:27;-1:-1:-1;9606:55:141;;9657:1;9654;9647:12;9606:55;9686:2;9680:9;9711:48;9727:31;9755:2;9727:31;:::i;9711:48::-;9782:2;9775:5;9768:17;9822:7;9817:2;9812;9808;9804:11;9800:20;9797:33;9794:53;;;9843:1;9840;9833:12;9794:53;9856:67;9920:2;9915;9908:5;9904:14;9899:2;9895;9891:11;9856:67;:::i;:::-;9942:5;9932:15;;;;;8942:1011;;;;;:::o;9958:251::-;10028:6;10081:2;10069:9;10060:7;10056:23;10052:32;10049:52;;;10097:1;10094;10087:12;10049:52;10129:9;10123:16;10148:31;10173:5;10148:31;:::i;11613:184::-;11683:6;11736:2;11724:9;11715:7;11711:23;11707:32;11704:52;;;11752:1;11749;11742:12;11704:52;-1:-1:-1;11775:16:141;;11613:184;-1:-1:-1;11613:184:141:o;12081:225::-;12148:9;;;12169:11;;;12166:134;;;12222:10;12217:3;12213:20;12210:1;12203:31;12257:4;12254:1;12247:15;12285:4;12282:1;12275:15;12166:134;12081:225;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addressOfNFTName(string)": "fd72aa30",
    "claimUnclaimedState((bytes32,address,address,bytes,uint256),address)": "e05df3ee",
    "core()": "f2f4eb26",
    "execute(uint8,bytes[],address,bool,address,bytes32)": "e93977e8",
    "poolFee()": "089fe6aa",
    "registerUnclaimedState((bytes32,address,address,bytes,uint256),bool)": "534e4af7",
    "router()": "f887ea40",
    "templates(uint256,uint256)": "d07e0189",
    "voidUnclaimedState((bytes32,address,address,bytes,uint256))": "eba8f5b4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coreAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressOfNFTName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"emailAddrCommit\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"extensionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"state\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"internalType\":\"struct UnclaimedState\",\"name\":\"unclaimedState\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"claimUnclaimedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"core\",\"outputs\":[{\"internalType\":\"contract EmailWalletCore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"templateIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes[]\",\"name\":\"subjectParams\",\"type\":\"bytes[]\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasEmailRecipient\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipientETHAddr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"emailNullifier\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"emailAddrCommit\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"extensionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"state\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"internalType\":\"struct UnclaimedState\",\"name\":\"unclaimedState\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isInternal\",\"type\":\"bool\"}],\"name\":\"registerUnclaimedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"templates\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"emailAddrCommit\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"extensionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"state\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"internalType\":\"struct UnclaimedState\",\"name\":\"unclaimedState\",\"type\":\"tuple\"}],\"name\":\"voidUnclaimedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimUnclaimedState((bytes32,address,address,bytes,uint256),address)\":{\"params\":{\"unclaimedState\":\"Unclaimed state that is being claimed\",\"wallet\":\"Address of users wallet\"}},\"execute(uint8,bytes[],address,bool,address,bytes32)\":{\"details\":\"Implementations should not send tokens to `wallet` directly and use `EmailWalletCore.depositTokenToAccount()` insteadDecode {tokenAmount} in template as `abi.decode(uint256,string)` (`tokenName` and `tokenAmount`)\",\"params\":{\"emailNullifier\":\"Nullifier of the email\",\"hasEmailRecipient\":\"Whether the email subject has a recipient (email address)\",\"recipientETHAddr\":\"The ETH address of the recipient in email (if any, and hasEmailRecipient = false)\",\"subjectParams\":\"Array of params decoded from email subject based on the template, in the same order matchers\",\"templateIndex\":\"Index of the subjectTemplate to which the subject was matched\",\"wallet\":\"Address of users wallet\"}},\"registerUnclaimedState((bytes32,address,address,bytes,uint256),bool)\":{\"params\":{\"isInternal\":\"A flag whether the unclaimed state is registered from `registerUnclaimedStateAsExtension`.\",\"unclaimedState\":\"Unclaimed state that is registered\"},\"returns\":{\"_0\":\"Whether the unclaimed state is registered successfully\"}},\"voidUnclaimedState((bytes32,address,address,bytes,uint256))\":{\"params\":{\"unclaimedState\":\"Unclaimed state that is expired\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimUnclaimedState((bytes32,address,address,bytes,uint256),address)\":{\"notice\":\"Claim an unclaimed state to recipient user\"},\"execute(uint8,bytes[],address,bool,address,bytes32)\":{\"notice\":\"Execute the extension logic\"},\"registerUnclaimedState((bytes32,address,address,bytes,uint256),bool)\":{\"notice\":\"Register unclaimed state for a recipient emailCommitment\"},\"voidUnclaimedState((bytes32,address,address,bytes,uint256))\":{\"notice\":\"Revert an expired inclaimed state\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/TestUniswapExtension.sol\":\"TestNFTExtension\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@uniswap/=../../node_modules/@uniswap/\",\":@zk-email/=../../node_modules/@zk-email/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/\",\":solady/=../../node_modules/solady/src/\"]},\"sources\":{\"../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/utils/Create2Upgradeable.sol\":{\"keccak256\":\"0x1a18b22e850a37d6620f436850b2941efdf4770bcffbb61c8a9522f6ab514bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0434bca8a86bf4cb28c61591cb4a6c712e40fedde36fd1a578dc6aa97e6fc79f\",\"dweb:/ipfs/QmPVoDGegzJbpx9hMdD9JhE8hbLjnpCWCfUnBdqHB2wTVj\"]},\"../../node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"../../node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"../../node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"../../node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"../../node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"../../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"../../node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"../../node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"../../node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"../../node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"../../node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"../../node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"../../node_modules/@zk-email/contracts/DKIMRegistry.sol\":{\"keccak256\":\"0x05b975c6ea35129a0f7bb9ab12b90976ac5d53b9c1dd6cffa3e4c25c431fc80a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95a5bf247da79ddeb38e07be9b59c0172c29d79712c109ffe7b9adfd57efe8b\",\"dweb:/ipfs/QmUrUCmJ5DA9rErcErqXKtmRRkbbxj4FzpA78H5ZGWrzXa\"]},\"../../node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"../../node_modules/solady/src/utils/LibZip.sol\":{\"keccak256\":\"0xc8a95904ff0675c2f7e937a993372a59a6209674573460d50851be1e733dcdcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e9db35f483f7a3ccec0fb75eb170eddfff6dcfb8b812a27829383176a24737f\",\"dweb:/ipfs/QmPiPWo3STai4g9XddjV8URUVHTv3aEJkFAgmkMw2Wek3v\"]},\"src/EmailWalletCore.sol\":{\"keccak256\":\"0x2bbe839b43ab3e82c0ec1a5c7aa25afd5cf864ade69f4f9d7bd941e533bb6bc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb40978a7a519557261da9261ec40125c93a3a91cee85958f5025d1b6cc7ec8\",\"dweb:/ipfs/QmWhmz7XeapjnqPTjRhbEzhhasbqqaBeTRu8SYzL42HXp1\"]},\"src/Wallet.sol\":{\"keccak256\":\"0x1dce6c7c979b2a617667f3ad526bb5f0357307c10dfdbfc0cd9b1d0d7d454cf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89f3af98455ff5faa2158912e1e14f60bf6eb6a82eec5e164c2597ebd243ed6b\",\"dweb:/ipfs/QmdDYSCBzYTpEZo9BZawRRVfqZTDnuuMnwrGHgR5M1T1uo\"]},\"src/interfaces/Commands.sol\":{\"keccak256\":\"0xb6d66be85a7c6b29433d44d477e118bf5ee0ef55bd16bef4245ff9a78c3ae285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baafc97525cf65a7cc5eae689c56f07fa041882e304b69536dedcdc2bc12b2b6\",\"dweb:/ipfs/QmZd1rGDbm6ReR9MESsDj23ZpNpNH538otDDo8B9aTKopM\"]},\"src/interfaces/Events.sol\":{\"keccak256\":\"0x9675ce70d7bce8d8e12f0d68e81564de80cada9e9423c83c9b4a712787488eae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f83227565136a500e2da93c3b6bde297bc458706d615ec217f280e03dbddad4b\",\"dweb:/ipfs/QmSssFf2oADn4WbKyR7NcRsj1VCxr62iAXVgkr7E3osAAk\"]},\"src/interfaces/Extension.sol\":{\"keccak256\":\"0x6a5b98a373efca6ea7af2d4619cdf2f0105caef096a7c406afeda4df775792ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21a88f07cc0ad0fcdc8ecefe4f03057cb64245bb5b77fb4d88fc0d97ee53103c\",\"dweb:/ipfs/QmUFRMi6Uz5JmKCUvxD7vZFUWUfvxydz3RChceZJdfrGVw\"]},\"src/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x048365ba56117bb08f6c73666f42dea4cd662f744e49e36a3d968d54d6133475\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32e0ac9a55b21de8f81c8e4ef62ad1723a242744e11a130d226eb4b592d77a83\",\"dweb:/ipfs/QmRyZ4CMnGWTrAPAvWo9vf1b9V13Z4jWRAmfWJAQQEfFhF\"]},\"src/interfaces/IVerifier.sol\":{\"keccak256\":\"0xbe5543d4d5689d418f314406860c9c3c577e3e064c73d5875b6f68e54b12539e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8696cb23f7fd8b3224413b858605754b52cef43f46f48612dbcb3644dc8462c7\",\"dweb:/ipfs/QmbDb5M2ft2kd3EfqtcNq2SrVVER37X4bGKsMaQX1GqSQv\"]},\"src/interfaces/Types.sol\":{\"keccak256\":\"0x5e5329109c6991844863a48f3c5e164bf327c6f12f70c8372ce98c5677bc18e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b56e1dcbace989072d31ee3954e5c334423ab0c8858d865c725d27cd7c1eed5e\",\"dweb:/ipfs/QmWedT1stSDsQSrYMcifHNwJVoH7Y7PNXi9xP358ZfhBce\"]},\"src/libraries/BytesUtils.sol\":{\"keccak256\":\"0x2baced9d4eceff16ba7f613cf35791b4b74634660aeeafea280564545d9fa01f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a4fa20ccd41f923aa3ded020711e9b56277f52bbd392d381144ea748e2b5d1\",\"dweb:/ipfs/QmTGJtVfXLBnjwhZW2y1KmvYnZDTNpigk8PJr9G67QAZ8B\"]},\"src/libraries/DecimalUtils.sol\":{\"keccak256\":\"0xcb26b2f6951553e466ac01f16e85992ddd4ac27dbb06aeaec0819ab3d8b75176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed7a33208aa28915de5b6b955279c1f04bc08a82dbefa4cbed589c5d757ebda8\",\"dweb:/ipfs/QmevdyZY3A11kuZjJG35n7ohsWaRpjQbwqDBaNVF1VNvDT\"]},\"src/utils/TokenRegistry.sol\":{\"keccak256\":\"0x5c710211676e9e323eca392f7a79197dc0a8f8406700911069ebb037b9a340af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf4b8140eddc3b6650bc5826eec32721aa8a2e58c815d7df2943e90877369e2e\",\"dweb:/ipfs/QmPKzgGNRy9ET67MhUwwyu28UqXtmBYwQp1CnrRxaX3cxP\"]},\"test/mocks/TestUniswapExtension.sol\":{\"keccak256\":\"0x894ca6404ae2599c5a86881cb8d6b6459d8c08ec85850ff6988655d22060ec10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324eb233f92e5a6c4adce7c3a51eab7e216482faa702a7f38f234b47548f4588\",\"dweb:/ipfs/QmYa1QzYdtyMSN486Nje7K7WsfYnrrp6LyJEBtF9bsN16n\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "coreAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_router",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressOfNFTName",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UnclaimedState",
              "name": "unclaimedState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "emailAddrCommit",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "extensionAddr",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "state",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiryTime",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimUnclaimedState"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "core",
          "outputs": [
            {
              "internalType": "contract EmailWalletCore",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "templateIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes[]",
              "name": "subjectParams",
              "type": "bytes[]"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "hasEmailRecipient",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipientETHAddr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "emailNullifier",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolFee",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UnclaimedState",
              "name": "unclaimedState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "emailAddrCommit",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "extensionAddr",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "state",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiryTime",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "isInternal",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerUnclaimedState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "templates",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UnclaimedState",
              "name": "unclaimedState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "emailAddrCommit",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "extensionAddr",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "state",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiryTime",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "voidUnclaimedState"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimUnclaimedState((bytes32,address,address,bytes,uint256),address)": {
            "params": {
              "unclaimedState": "Unclaimed state that is being claimed",
              "wallet": "Address of users wallet"
            }
          },
          "execute(uint8,bytes[],address,bool,address,bytes32)": {
            "details": "Implementations should not send tokens to `wallet` directly and use `EmailWalletCore.depositTokenToAccount()` insteadDecode {tokenAmount} in template as `abi.decode(uint256,string)` (`tokenName` and `tokenAmount`)",
            "params": {
              "emailNullifier": "Nullifier of the email",
              "hasEmailRecipient": "Whether the email subject has a recipient (email address)",
              "recipientETHAddr": "The ETH address of the recipient in email (if any, and hasEmailRecipient = false)",
              "subjectParams": "Array of params decoded from email subject based on the template, in the same order matchers",
              "templateIndex": "Index of the subjectTemplate to which the subject was matched",
              "wallet": "Address of users wallet"
            }
          },
          "registerUnclaimedState((bytes32,address,address,bytes,uint256),bool)": {
            "params": {
              "isInternal": "A flag whether the unclaimed state is registered from `registerUnclaimedStateAsExtension`.",
              "unclaimedState": "Unclaimed state that is registered"
            },
            "returns": {
              "_0": "Whether the unclaimed state is registered successfully"
            }
          },
          "voidUnclaimedState((bytes32,address,address,bytes,uint256))": {
            "params": {
              "unclaimedState": "Unclaimed state that is expired"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimUnclaimedState((bytes32,address,address,bytes,uint256),address)": {
            "notice": "Claim an unclaimed state to recipient user"
          },
          "execute(uint8,bytes[],address,bool,address,bytes32)": {
            "notice": "Execute the extension logic"
          },
          "registerUnclaimedState((bytes32,address,address,bytes,uint256),bool)": {
            "notice": "Register unclaimed state for a recipient emailCommitment"
          },
          "voidUnclaimedState((bytes32,address,address,bytes,uint256))": {
            "notice": "Revert an expired inclaimed state"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=../../node_modules/@openzeppelin/",
        ":@uniswap/=../../node_modules/@uniswap/",
        ":@zk-email/=../../node_modules/@zk-email/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/",
        ":solady/=../../node_modules/solady/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/TestUniswapExtension.sol": "TestNFTExtension"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/utils/Create2Upgradeable.sol": {
        "keccak256": "0x1a18b22e850a37d6620f436850b2941efdf4770bcffbb61c8a9522f6ab514bcd",
        "urls": [
          "bzz-raw://0434bca8a86bf4cb28c61591cb4a6c712e40fedde36fd1a578dc6aa97e6fc79f",
          "dweb:/ipfs/QmPVoDGegzJbpx9hMdD9JhE8hbLjnpCWCfUnBdqHB2wTVj"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "../../node_modules/@zk-email/contracts/DKIMRegistry.sol": {
        "keccak256": "0x05b975c6ea35129a0f7bb9ab12b90976ac5d53b9c1dd6cffa3e4c25c431fc80a",
        "urls": [
          "bzz-raw://f95a5bf247da79ddeb38e07be9b59c0172c29d79712c109ffe7b9adfd57efe8b",
          "dweb:/ipfs/QmUrUCmJ5DA9rErcErqXKtmRRkbbxj4FzpA78H5ZGWrzXa"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "../../node_modules/solady/src/utils/LibZip.sol": {
        "keccak256": "0xc8a95904ff0675c2f7e937a993372a59a6209674573460d50851be1e733dcdcc",
        "urls": [
          "bzz-raw://9e9db35f483f7a3ccec0fb75eb170eddfff6dcfb8b812a27829383176a24737f",
          "dweb:/ipfs/QmPiPWo3STai4g9XddjV8URUVHTv3aEJkFAgmkMw2Wek3v"
        ],
        "license": "MIT"
      },
      "src/EmailWalletCore.sol": {
        "keccak256": "0x2bbe839b43ab3e82c0ec1a5c7aa25afd5cf864ade69f4f9d7bd941e533bb6bc3",
        "urls": [
          "bzz-raw://efb40978a7a519557261da9261ec40125c93a3a91cee85958f5025d1b6cc7ec8",
          "dweb:/ipfs/QmWhmz7XeapjnqPTjRhbEzhhasbqqaBeTRu8SYzL42HXp1"
        ],
        "license": "MIT"
      },
      "src/Wallet.sol": {
        "keccak256": "0x1dce6c7c979b2a617667f3ad526bb5f0357307c10dfdbfc0cd9b1d0d7d454cf8",
        "urls": [
          "bzz-raw://89f3af98455ff5faa2158912e1e14f60bf6eb6a82eec5e164c2597ebd243ed6b",
          "dweb:/ipfs/QmdDYSCBzYTpEZo9BZawRRVfqZTDnuuMnwrGHgR5M1T1uo"
        ],
        "license": "MIT"
      },
      "src/interfaces/Commands.sol": {
        "keccak256": "0xb6d66be85a7c6b29433d44d477e118bf5ee0ef55bd16bef4245ff9a78c3ae285",
        "urls": [
          "bzz-raw://baafc97525cf65a7cc5eae689c56f07fa041882e304b69536dedcdc2bc12b2b6",
          "dweb:/ipfs/QmZd1rGDbm6ReR9MESsDj23ZpNpNH538otDDo8B9aTKopM"
        ],
        "license": "MIT"
      },
      "src/interfaces/Events.sol": {
        "keccak256": "0x9675ce70d7bce8d8e12f0d68e81564de80cada9e9423c83c9b4a712787488eae",
        "urls": [
          "bzz-raw://f83227565136a500e2da93c3b6bde297bc458706d615ec217f280e03dbddad4b",
          "dweb:/ipfs/QmSssFf2oADn4WbKyR7NcRsj1VCxr62iAXVgkr7E3osAAk"
        ],
        "license": "MIT"
      },
      "src/interfaces/Extension.sol": {
        "keccak256": "0x6a5b98a373efca6ea7af2d4619cdf2f0105caef096a7c406afeda4df775792ac",
        "urls": [
          "bzz-raw://21a88f07cc0ad0fcdc8ecefe4f03057cb64245bb5b77fb4d88fc0d97ee53103c",
          "dweb:/ipfs/QmUFRMi6Uz5JmKCUvxD7vZFUWUfvxydz3RChceZJdfrGVw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPriceOracle.sol": {
        "keccak256": "0x048365ba56117bb08f6c73666f42dea4cd662f744e49e36a3d968d54d6133475",
        "urls": [
          "bzz-raw://32e0ac9a55b21de8f81c8e4ef62ad1723a242744e11a130d226eb4b592d77a83",
          "dweb:/ipfs/QmRyZ4CMnGWTrAPAvWo9vf1b9V13Z4jWRAmfWJAQQEfFhF"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVerifier.sol": {
        "keccak256": "0xbe5543d4d5689d418f314406860c9c3c577e3e064c73d5875b6f68e54b12539e",
        "urls": [
          "bzz-raw://8696cb23f7fd8b3224413b858605754b52cef43f46f48612dbcb3644dc8462c7",
          "dweb:/ipfs/QmbDb5M2ft2kd3EfqtcNq2SrVVER37X4bGKsMaQX1GqSQv"
        ],
        "license": "MIT"
      },
      "src/interfaces/Types.sol": {
        "keccak256": "0x5e5329109c6991844863a48f3c5e164bf327c6f12f70c8372ce98c5677bc18e7",
        "urls": [
          "bzz-raw://b56e1dcbace989072d31ee3954e5c334423ab0c8858d865c725d27cd7c1eed5e",
          "dweb:/ipfs/QmWedT1stSDsQSrYMcifHNwJVoH7Y7PNXi9xP358ZfhBce"
        ],
        "license": "MIT"
      },
      "src/libraries/BytesUtils.sol": {
        "keccak256": "0x2baced9d4eceff16ba7f613cf35791b4b74634660aeeafea280564545d9fa01f",
        "urls": [
          "bzz-raw://75a4fa20ccd41f923aa3ded020711e9b56277f52bbd392d381144ea748e2b5d1",
          "dweb:/ipfs/QmTGJtVfXLBnjwhZW2y1KmvYnZDTNpigk8PJr9G67QAZ8B"
        ],
        "license": "MIT"
      },
      "src/libraries/DecimalUtils.sol": {
        "keccak256": "0xcb26b2f6951553e466ac01f16e85992ddd4ac27dbb06aeaec0819ab3d8b75176",
        "urls": [
          "bzz-raw://ed7a33208aa28915de5b6b955279c1f04bc08a82dbefa4cbed589c5d757ebda8",
          "dweb:/ipfs/QmevdyZY3A11kuZjJG35n7ohsWaRpjQbwqDBaNVF1VNvDT"
        ],
        "license": "MIT"
      },
      "src/utils/TokenRegistry.sol": {
        "keccak256": "0x5c710211676e9e323eca392f7a79197dc0a8f8406700911069ebb037b9a340af",
        "urls": [
          "bzz-raw://cf4b8140eddc3b6650bc5826eec32721aa8a2e58c815d7df2943e90877369e2e",
          "dweb:/ipfs/QmPKzgGNRy9ET67MhUwwyu28UqXtmBYwQp1CnrRxaX3cxP"
        ],
        "license": "MIT"
      },
      "test/mocks/TestUniswapExtension.sol": {
        "keccak256": "0x894ca6404ae2599c5a86881cb8d6b6459d8c08ec85850ff6988655d22060ec10",
        "urls": [
          "bzz-raw://324eb233f92e5a6c4adce7c3a51eab7e216482faa702a7f38f234b47548f4588",
          "dweb:/ipfs/QmYa1QzYdtyMSN486Nje7K7WsfYnrrp6LyJEBtF9bsN16n"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/TestUniswapExtension.sol",
    "id": 80796,
    "exportedSymbols": {
      "AccountKeyInfo": [
        63870
      ],
      "EmailOp": [
        63821
      ],
      "EmailProof": [
        63879
      ],
      "EmailWalletCore": [
        63287
      ],
      "ExecutionContext": [
        63899
      ],
      "Extension": [
        63654
      ],
      "ExtensionManagerParams": [
        63829
      ],
      "ExtensionParams": [
        63835
      ],
      "IERC20": [
        1208
      ],
      "ISwapRouter": [
        80592
      ],
      "RelayerConfig": [
        63781
      ],
      "TestNFTExtension": [
        80795
      ],
      "TokenAllowance": [
        63884
      ],
      "UnclaimedFund": [
        63846
      ],
      "UnclaimedState": [
        63857
      ],
      "WalletParams": [
        63826
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3644:139",
    "nodes": [
      {
        "id": 80539,
        "nodeType": "PragmaDirective",
        "src": "32:23:139",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 80540,
        "nodeType": "ImportDirective",
        "src": "57:56:139",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80796,
        "sourceUnit": 1209,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 80542,
        "nodeType": "ImportDirective",
        "src": "114:61:139",
        "nodes": [],
        "absolutePath": "src/interfaces/Extension.sol",
        "file": "../../src/interfaces/Extension.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80796,
        "sourceUnit": 63655,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80541,
              "name": "Extension",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63654,
              "src": "122:9:139",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80544,
        "nodeType": "ImportDirective",
        "src": "176:62:139",
        "nodes": [],
        "absolutePath": "src/EmailWalletCore.sol",
        "file": "../../src/EmailWalletCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80796,
        "sourceUnit": 63288,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80543,
              "name": "EmailWalletCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63287,
              "src": "184:15:139",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80545,
        "nodeType": "ImportDirective",
        "src": "239:40:139",
        "nodes": [],
        "absolutePath": "src/interfaces/Types.sol",
        "file": "../../src/interfaces/Types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80796,
        "sourceUnit": 63900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 80592,
        "nodeType": "ContractDefinition",
        "src": "348:1207:139",
        "nodes": [
          {
            "id": 80562,
            "nodeType": "StructDefinition",
            "src": "376:247:139",
            "nodes": [],
            "canonicalName": "ISwapRouter.ExactInputSingleParams",
            "members": [
              {
                "constant": false,
                "id": 80547,
                "mutability": "mutable",
                "name": "tokenIn",
                "nameLocation": "424:7:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "416:15:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 80546,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "416:7:139",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80549,
                "mutability": "mutable",
                "name": "tokenOut",
                "nameLocation": "449:8:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "441:16:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 80548,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:7:139",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80551,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "474:3:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "467:10:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 80550,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "467:6:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80553,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "495:9:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "487:17:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 80552,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "487:7:139",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80555,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "519:8:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "514:13:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80554,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "514:4:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80557,
                "mutability": "mutable",
                "name": "amountIn",
                "nameLocation": "542:8:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "537:13:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80556,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "537:4:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80559,
                "mutability": "mutable",
                "name": "amountOutMinimum",
                "nameLocation": "565:16:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "560:21:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80558,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "560:4:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80561,
                "mutability": "mutable",
                "name": "sqrtPriceLimitX96",
                "nameLocation": "599:17:139",
                "nodeType": "VariableDeclaration",
                "scope": 80562,
                "src": "591:25:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint160",
                  "typeString": "uint160"
                },
                "typeName": {
                  "id": 80560,
                  "name": "uint160",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ExactInputSingleParams",
            "nameLocation": "383:22:139",
            "scope": 80592,
            "visibility": "public"
          },
          {
            "id": 80571,
            "nodeType": "FunctionDefinition",
            "src": "880:122:139",
            "nodes": [],
            "documentation": {
              "id": 80563,
              "nodeType": "StructuredDocumentation",
              "src": "629:246:139",
              "text": "@notice Swaps amountIn of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as ExactInputSingleParams in calldata\n @return amountOut The amount of the received token"
            },
            "functionSelector": "414bf389",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exactInputSingle",
            "nameLocation": "889:16:139",
            "parameters": {
              "id": 80567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80566,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "947:6:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80571,
                  "src": "915:38:139",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputSingleParams_$80562_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactInputSingleParams"
                  },
                  "typeName": {
                    "id": 80565,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80564,
                      "name": "ExactInputSingleParams",
                      "nameLocations": [
                        "915:22:139"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80562,
                      "src": "915:22:139"
                    },
                    "referencedDeclaration": 80562,
                    "src": "915:22:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$80562_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:54:139"
            },
            "returnParameters": {
              "id": 80570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80569,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "991:9:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80571,
                  "src": "986:14:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80568,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:4:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:16:139"
            },
            "scope": 80592,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80582,
            "nodeType": "StructDefinition",
            "src": "1008:155:139",
            "nodes": [],
            "canonicalName": "ISwapRouter.ExactInputParams",
            "members": [
              {
                "constant": false,
                "id": 80573,
                "mutability": "mutable",
                "name": "path",
                "nameLocation": "1048:4:139",
                "nodeType": "VariableDeclaration",
                "scope": 80582,
                "src": "1042:10:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 80572,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1042:5:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80575,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "1070:9:139",
                "nodeType": "VariableDeclaration",
                "scope": 80582,
                "src": "1062:17:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 80574,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1062:7:139",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80577,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "1094:8:139",
                "nodeType": "VariableDeclaration",
                "scope": 80582,
                "src": "1089:13:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80576,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1089:4:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80579,
                "mutability": "mutable",
                "name": "amountIn",
                "nameLocation": "1117:8:139",
                "nodeType": "VariableDeclaration",
                "scope": 80582,
                "src": "1112:13:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80578,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1112:4:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80581,
                "mutability": "mutable",
                "name": "amountOutMinimum",
                "nameLocation": "1140:16:139",
                "nodeType": "VariableDeclaration",
                "scope": 80582,
                "src": "1135:21:139",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80580,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1135:4:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ExactInputParams",
            "nameLocation": "1015:16:139",
            "scope": 80592,
            "visibility": "public"
          },
          {
            "id": 80591,
            "nodeType": "FunctionDefinition",
            "src": "1443:110:139",
            "nodes": [],
            "documentation": {
              "id": 80583,
              "nodeType": "StructuredDocumentation",
              "src": "1169:269:139",
              "text": "@notice Swaps amountIn of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as ExactInputParams in calldata\n @return amountOut The amount of the received token"
            },
            "functionSelector": "c04b8d59",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exactInput",
            "nameLocation": "1452:10:139",
            "parameters": {
              "id": 80587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80586,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1498:6:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80591,
                  "src": "1472:32:139",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputParams_$80582_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactInputParams"
                  },
                  "typeName": {
                    "id": 80585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80584,
                      "name": "ExactInputParams",
                      "nameLocations": [
                        "1472:16:139"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80582,
                      "src": "1472:16:139"
                    },
                    "referencedDeclaration": 80582,
                    "src": "1472:16:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputParams_$80582_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:48:139"
            },
            "returnParameters": {
              "id": 80590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80589,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1542:9:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80591,
                  "src": "1537:14:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80588,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:4:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:16:139"
            },
            "scope": 80592,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISwapRouter",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          80592
        ],
        "name": "ISwapRouter",
        "nameLocation": "358:11:139",
        "scope": 80796,
        "usedErrors": []
      },
      {
        "id": 80795,
        "nodeType": "ContractDefinition",
        "src": "1557:2118:139",
        "nodes": [
          {
            "id": 80597,
            "nodeType": "VariableDeclaration",
            "src": "1602:27:139",
            "nodes": [],
            "constant": false,
            "functionSelector": "f2f4eb26",
            "mutability": "mutable",
            "name": "core",
            "nameLocation": "1625:4:139",
            "scope": 80795,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
              "typeString": "contract EmailWalletCore"
            },
            "typeName": {
              "id": 80596,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80595,
                "name": "EmailWalletCore",
                "nameLocations": [
                  "1602:15:139"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 63287,
                "src": "1602:15:139"
              },
              "referencedDeclaration": 63287,
              "src": "1602:15:139",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                "typeString": "contract EmailWalletCore"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80600,
            "nodeType": "VariableDeclaration",
            "src": "1635:25:139",
            "nodes": [],
            "constant": false,
            "functionSelector": "f887ea40",
            "mutability": "mutable",
            "name": "router",
            "nameLocation": "1654:6:139",
            "scope": 80795,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$80592",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 80599,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80598,
                "name": "ISwapRouter",
                "nameLocations": [
                  "1635:11:139"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 80592,
                "src": "1635:11:139"
              },
              "referencedDeclaration": 80592,
              "src": "1635:11:139",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$80592",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80603,
            "nodeType": "VariableDeclaration",
            "src": "1725:37:139",
            "nodes": [],
            "constant": true,
            "functionSelector": "089fe6aa",
            "mutability": "constant",
            "name": "poolFee",
            "nameLocation": "1748:7:139",
            "scope": 80795,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 80601,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1725:6:139",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 80602,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1758:4:139",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "id": 80607,
            "nodeType": "VariableDeclaration",
            "src": "1769:50:139",
            "nodes": [],
            "constant": false,
            "functionSelector": "fd72aa30",
            "mutability": "mutable",
            "name": "addressOfNFTName",
            "nameLocation": "1803:16:139",
            "scope": 80795,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 80606,
              "keyType": {
                "id": 80604,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1777:6:139",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1769:26:139",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 80605,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1787:7:139",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 80617,
            "nodeType": "VariableDeclaration",
            "src": "1826:47:139",
            "nodes": [],
            "constant": false,
            "functionSelector": "d07e0189",
            "mutability": "mutable",
            "name": "templates",
            "nameLocation": "1844:9:139",
            "scope": 80795,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage",
              "typeString": "string[][]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "id": 80608,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1826:6:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 80609,
                "nodeType": "ArrayTypeName",
                "src": "1826:8:139",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              },
              "id": 80610,
              "nodeType": "ArrayTypeName",
              "src": "1826:10:139",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage_ptr",
                "typeString": "string[][]"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 80615,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1871:1:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 80614,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "1856:14:139",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$dyn_memory_ptr_$",
                  "typeString": "function (uint256) pure returns (string memory[] memory[] memory)"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 80611,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1860:6:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 80612,
                    "nodeType": "ArrayTypeName",
                    "src": "1860:8:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "id": 80613,
                  "nodeType": "ArrayTypeName",
                  "src": "1860:10:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "string[][]"
                  }
                }
              },
              "id": 80616,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1856:17:139",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$dyn_memory_ptr",
                "typeString": "string memory[] memory[] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80650,
            "nodeType": "FunctionDefinition",
            "src": "1880:245:139",
            "nodes": [],
            "body": {
              "id": 80649,
              "nodeType": "Block",
              "src": "1927:198:139",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 80631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80624,
                      "name": "core",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80597,
                      "src": "1937:4:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                        "typeString": "contract EmailWalletCore"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80628,
                              "name": "coreAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80619,
                              "src": "1968:8:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1960:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 80626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1960:8:139",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1960:17:139",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 80625,
                        "name": "EmailWalletCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63287,
                        "src": "1944:15:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EmailWalletCore_$63287_$",
                          "typeString": "type(contract EmailWalletCore)"
                        }
                      },
                      "id": 80630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1944:34:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                        "typeString": "contract EmailWalletCore"
                      }
                    },
                    "src": "1937:41:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                      "typeString": "contract EmailWalletCore"
                    }
                  },
                  "id": 80632,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:41:139"
                },
                {
                  "expression": {
                    "id": 80637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80633,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80600,
                      "src": "1988:6:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$80592",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80635,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80621,
                          "src": "2009:7:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 80634,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80592,
                        "src": "1997:11:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$80592_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 80636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1997:20:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$80592",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "src": "1988:29:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$80592",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "id": 80638,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:29:139"
                },
                {
                  "expression": {
                    "id": 80647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80639,
                        "name": "templates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80617,
                        "src": "2060:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref[] storage ref"
                        }
                      },
                      "id": 80641,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 80640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2060:12:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "hexValue": "53776170",
                          "id": 80642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2076:6:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_bce316f0d9d2a3affa97de1d99bb2aac0538e2666d0d8545545ead241ef0ccab",
                            "typeString": "literal_string \"Swap\""
                          },
                          "value": "Swap"
                        },
                        {
                          "hexValue": "7b746f6b656e416d6f756e747d",
                          "id": 80643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2084:15:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_815ff003ec3cd903b6b66ff0f95b542fd3a93d2d90693c0d0c6beaa33ccaaf2b",
                            "typeString": "literal_string \"{tokenAmount}\""
                          },
                          "value": "{tokenAmount}"
                        },
                        {
                          "hexValue": "746f",
                          "id": 80644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2101:4:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                            "typeString": "literal_string \"to\""
                          },
                          "value": "to"
                        },
                        {
                          "hexValue": "7b737472696e677d",
                          "id": 80645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2107:10:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b0dd9c5dfd6b1348089539c8cd8146a59f1fd23ff2de9c6052e54da8d2a6c0fb",
                            "typeString": "literal_string \"{string}\""
                          },
                          "value": "{string}"
                        }
                      ],
                      "id": 80646,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2075:43:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$4_memory_ptr",
                        "typeString": "string memory[4] memory"
                      }
                    },
                    "src": "2060:58:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 80648,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:58:139"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 80622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80619,
                  "mutability": "mutable",
                  "name": "coreAddr",
                  "nameLocation": "1900:8:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80650,
                  "src": "1892:16:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80621,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "1918:7:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80650,
                  "src": "1910:15:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:35:139"
            },
            "returnParameters": {
              "id": 80623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:0:139"
            },
            "scope": 80795,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80794,
            "nodeType": "FunctionDefinition",
            "src": "2131:1542:139",
            "nodes": [],
            "body": {
              "id": 80793,
              "nodeType": "Block",
              "src": "2361:1312:139",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 80667,
                    "name": "emailNullifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80663,
                    "src": "2371:14:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 80668,
                  "nodeType": "ExpressionStatement",
                  "src": "2371:14:139"
                },
                {
                  "assignments": [
                    80671,
                    80673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80671,
                      "mutability": "mutable",
                      "name": "tokenAllowance",
                      "nameLocation": "2419:14:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 80793,
                      "src": "2397:36:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                        "typeString": "struct TokenAllowance"
                      },
                      "typeName": {
                        "id": 80670,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80669,
                          "name": "TokenAllowance",
                          "nameLocations": [
                            "2397:14:139"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63884,
                          "src": "2397:14:139"
                        },
                        "referencedDeclaration": 63884,
                        "src": "2397:14:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenAllowance_$63884_storage_ptr",
                          "typeString": "struct TokenAllowance"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80673,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "2449:8:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 80793,
                      "src": "2435:22:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 80672,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2435:6:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80684,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 80676,
                          "name": "subjectParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80655,
                          "src": "2472:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        "id": 80678,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 80677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2486:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2472:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 80679,
                            "name": "TokenAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63884,
                            "src": "2491:14:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TokenAllowance_$63884_storage_ptr_$",
                              "typeString": "type(struct TokenAllowance storage pointer)"
                            }
                          },
                          {
                            "id": 80681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2507:6:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 80680,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2507:6:139",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 80682,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2490:24:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_struct$_TokenAllowance_$63884_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$",
                          "typeString": "tuple(type(struct TokenAllowance storage pointer),type(string storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_struct$_TokenAllowance_$63884_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$",
                          "typeString": "tuple(type(struct TokenAllowance storage pointer),type(string storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 80674,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2461:3:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2465:6:139",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2461:10:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 80683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2461:54:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_TokenAllowance_$63884_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(struct TokenAllowance memory,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2396:119:139"
                },
                {
                  "assignments": [
                    80686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80686,
                      "mutability": "mutable",
                      "name": "tokenOutAddr",
                      "nameLocation": "2533:12:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 80793,
                      "src": "2525:20:139",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 80685,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:7:139",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80691,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80689,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80673,
                        "src": "2574:8:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 80687,
                        "name": "core",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80597,
                        "src": "2548:4:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                          "typeString": "contract EmailWalletCore"
                        }
                      },
                      "id": 80688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2553:20:139",
                      "memberName": "getTokenAddrFromName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61643,
                      "src": "2548:25:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 80690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2548:35:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2525:58:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 80699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 80693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2601:3:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2605:6:139",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2601:10:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 80697,
                              "name": "core",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80597,
                              "src": "2623:4:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                                "typeString": "contract EmailWalletCore"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                                "typeString": "contract EmailWalletCore"
                              }
                            ],
                            "id": 80696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2615:7:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 80695,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2615:7:139",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2615:13:139",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2601:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642073656e646572",
                        "id": 80700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2630:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                          "typeString": "literal_string \"invalid sender\""
                        },
                        "value": "invalid sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                          "typeString": "literal_string \"invalid sender\""
                        }
                      ],
                      "id": 80692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2593:7:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:54:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80702,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:54:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 80706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80704,
                          "name": "templateIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80652,
                          "src": "2665:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2682:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2665:18:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642074656d706c617465496e646578",
                        "id": 80707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2685:23:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5f453fa9845bfb975f02467b3806dc4ab45e3cf9db20b6915194a86cea6d85",
                          "typeString": "literal_string \"invalid templateIndex\""
                        },
                        "value": "invalid templateIndex"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc5f453fa9845bfb975f02467b3806dc4ab45e3cf9db20b6915194a86cea6d85",
                          "typeString": "literal_string \"invalid templateIndex\""
                        }
                      ],
                      "id": 80703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2657:7:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2657:52:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80709,
                  "nodeType": "ExpressionStatement",
                  "src": "2657:52:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 80716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80711,
                          "name": "tokenOutAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80686,
                          "src": "2727:12:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 80714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2751:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 80713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2743:7:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 80712,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2743:7:139",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2743:10:139",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2727:26:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206f757420746f6b656e206e616d65",
                        "id": 80717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2755:24:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d3405155c4debfcb2ac12b403369eedf5a1ef56d25c65e72b4ca0b1f4fa7626",
                          "typeString": "literal_string \"invalid out token name\""
                        },
                        "value": "invalid out token name"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d3405155c4debfcb2ac12b403369eedf5a1ef56d25c65e72b4ca0b1f4fa7626",
                          "typeString": "literal_string \"invalid out token name\""
                        }
                      ],
                      "id": 80710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2719:7:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2719:61:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80719,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:61:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2798:18:139",
                        "subExpression": {
                          "id": 80721,
                          "name": "hasEmailRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80659,
                          "src": "2799:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726563697069656e74206973206e6f7420737570706f72746564",
                        "id": 80723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2818:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ed98f2c015124363e950a6627781fdbb9f5519b077d53d792d7ee9ada6520ba",
                          "typeString": "literal_string \"recipient is not supported\""
                        },
                        "value": "recipient is not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ed98f2c015124363e950a6627781fdbb9f5519b077d53d792d7ee9ada6520ba",
                          "typeString": "literal_string \"recipient is not supported\""
                        }
                      ],
                      "id": 80720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2790:7:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2790:57:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80725,
                  "nodeType": "ExpressionStatement",
                  "src": "2790:57:139"
                },
                {
                  "assignments": [
                    80727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80727,
                      "mutability": "mutable",
                      "name": "balanceIn",
                      "nameLocation": "2862:9:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 80793,
                      "src": "2857:14:139",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80726,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2857:4:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80738,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80735,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2925:4:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestNFTExtension_$80795",
                              "typeString": "contract TestNFTExtension"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestNFTExtension_$80795",
                              "typeString": "contract TestNFTExtension"
                            }
                          ],
                          "id": 80734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2917:7:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80733,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2917:7:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2917:13:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 80729,
                              "name": "tokenAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80671,
                              "src": "2881:14:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                                "typeString": "struct TokenAllowance memory"
                              }
                            },
                            "id": 80730,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2896:9:139",
                            "memberName": "tokenAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63881,
                            "src": "2881:24:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 80728,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "2874:6:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1208_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 80731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2874:32:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1208",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 80732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2907:9:139",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1165,
                      "src": "2874:42:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2874:57:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2857:74:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80742,
                          "name": "tokenAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80671,
                          "src": "2970:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                            "typeString": "struct TokenAllowance memory"
                          }
                        },
                        "id": 80743,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2985:9:139",
                        "memberName": "tokenAddr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63881,
                        "src": "2970:24:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 80744,
                          "name": "tokenAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80671,
                          "src": "2995:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                            "typeString": "struct TokenAllowance memory"
                          }
                        },
                        "id": 80745,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3010:6:139",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63883,
                        "src": "2995:21:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80739,
                        "name": "core",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80597,
                        "src": "2941:4:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EmailWalletCore_$63287",
                          "typeString": "contract EmailWalletCore"
                        }
                      },
                      "id": 80741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2946:23:139",
                      "memberName": "requestTokenAsExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61136,
                      "src": "2941:28:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 80746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:76:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80747,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:76:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 80756,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3086:4:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestNFTExtension_$80795",
                                      "typeString": "contract TestNFTExtension"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestNFTExtension_$80795",
                                      "typeString": "contract TestNFTExtension"
                                    }
                                  ],
                                  "id": 80755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3078:7:139",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 80754,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3078:7:139",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 80757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3078:13:139",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 80750,
                                      "name": "tokenAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80671,
                                      "src": "3042:14:139",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                                        "typeString": "struct TokenAllowance memory"
                                      }
                                    },
                                    "id": 80751,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3057:9:139",
                                    "memberName": "tokenAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63881,
                                    "src": "3042:24:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 80749,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1208,
                                  "src": "3035:6:139",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1208_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 80752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3035:32:139",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1208",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 80753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3068:9:139",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1165,
                              "src": "3035:42:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 80758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3035:57:139",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 80759,
                            "name": "balanceIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80727,
                            "src": "3095:9:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3035:69:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 80761,
                            "name": "tokenAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80671,
                            "src": "3108:14:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                              "typeString": "struct TokenAllowance memory"
                            }
                          },
                          "id": 80762,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3123:6:139",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63883,
                          "src": "3108:21:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3035:94:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206973206e6f742073656e742066726f6d20636f7265",
                        "id": 80764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3131:29:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71197f066c6bc62177772fd96b6e03566f1f43a138c05a6c5df83c45a461364f",
                          "typeString": "literal_string \"token is not sent from core\""
                        },
                        "value": "token is not sent from core"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71197f066c6bc62177772fd96b6e03566f1f43a138c05a6c5df83c45a461364f",
                          "typeString": "literal_string \"token is not sent from core\""
                        }
                      ],
                      "id": 80748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3027:7:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:134:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80766,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:134:139"
                },
                {
                  "assignments": [
                    80771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80771,
                      "mutability": "mutable",
                      "name": "swapParams",
                      "nameLocation": "3222:10:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 80793,
                      "src": "3180:52:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$80562_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 80770,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80769,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nameLocations": [
                            "3180:11:139",
                            "3192:22:139"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80562,
                          "src": "3180:34:139"
                        },
                        "referencedDeclaration": 80562,
                        "src": "3180:34:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$80562_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80786,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80774,
                          "name": "tokenAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80671,
                          "src": "3310:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                            "typeString": "struct TokenAllowance memory"
                          }
                        },
                        "id": 80775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3325:9:139",
                        "memberName": "tokenAddr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63881,
                        "src": "3310:24:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80776,
                        "name": "tokenOutAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80686,
                        "src": "3362:12:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80777,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80603,
                        "src": "3397:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 80778,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80657,
                        "src": "3433:6:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 80779,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3467:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 80780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3473:9:139",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3467:15:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 80781,
                          "name": "tokenAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80671,
                          "src": "3510:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenAllowance_$63884_memory_ptr",
                            "typeString": "struct TokenAllowance memory"
                          }
                        },
                        "id": 80782,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3525:6:139",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63883,
                        "src": "3510:21:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 80783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3567:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 80784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3605:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 80772,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80592,
                        "src": "3235:11:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$80592_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 80773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3260:22:139",
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80562,
                      "src": "3235:47:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$80562_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 80785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "3301:7:139",
                      "3352:8:139",
                      "3392:3:139",
                      "3422:9:139",
                      "3457:8:139",
                      "3500:8:139",
                      "3549:16:139",
                      "3586:17:139"
                    ],
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3235:386:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$80562_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3180:441:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80790,
                        "name": "swapParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80771,
                        "src": "3655:10:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$80562_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$80562_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 80787,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80600,
                        "src": "3631:6:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$80592",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 80789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3638:16:139",
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80571,
                      "src": "3631:23:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$80562_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 80791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3631:35:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80792,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:35:139"
                }
              ]
            },
            "baseFunctions": [
              63601
            ],
            "functionSelector": "e93977e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "2140:7:139",
            "overrides": {
              "id": 80665,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2352:8:139"
            },
            "parameters": {
              "id": 80664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80652,
                  "mutability": "mutable",
                  "name": "templateIndex",
                  "nameLocation": "2163:13:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80794,
                  "src": "2157:19:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 80651,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:5:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80655,
                  "mutability": "mutable",
                  "name": "subjectParams",
                  "nameLocation": "2201:13:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80794,
                  "src": "2186:28:139",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80653,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2186:5:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 80654,
                    "nodeType": "ArrayTypeName",
                    "src": "2186:7:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80657,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "2232:6:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80794,
                  "src": "2224:14:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80659,
                  "mutability": "mutable",
                  "name": "hasEmailRecipient",
                  "nameLocation": "2253:17:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80794,
                  "src": "2248:22:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 80658,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:4:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80661,
                  "mutability": "mutable",
                  "name": "recipientETHAddr",
                  "nameLocation": "2288:16:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80794,
                  "src": "2280:24:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2280:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80663,
                  "mutability": "mutable",
                  "name": "emailNullifier",
                  "nameLocation": "2322:14:139",
                  "nodeType": "VariableDeclaration",
                  "scope": 80794,
                  "src": "2314:22:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 80662,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:7:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2147:195:139"
            },
            "returnParameters": {
              "id": 80666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2361:0:139"
            },
            "scope": 80795,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80593,
              "name": "Extension",
              "nameLocations": [
                "1586:9:139"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63654,
              "src": "1586:9:139"
            },
            "id": 80594,
            "nodeType": "InheritanceSpecifier",
            "src": "1586:9:139"
          }
        ],
        "canonicalName": "TestNFTExtension",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80795,
          63654
        ],
        "name": "TestNFTExtension",
        "nameLocation": "1566:16:139",
        "scope": 80796,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 139
}